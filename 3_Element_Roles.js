[{"content":"import { render, screen } from '@testing-library/react';\n\nconst RoleExample = () => {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>Content info</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>Listitem</li>\n      <ul>Listgroup</ul>\n    </div>\n  );\n};\n\nrender(<RoleExample />);\n\n","type":"code","id":"y148b"},{"content":"test('can find elements by role', () => {\n  render(<RoleExample />);\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list',\n  ];\n\n  for (let role of roles) {\n    const el = screen.getByRole(role);\n    expect(el).toBeInTheDocument();\n  }\n});","type":"code","id":"qlumb"},{"content":"const AccessibleName = () => {\n  return (\n    <div>\n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n};\n\nrender(<AccessibleName />);","type":"code","id":"qn5ea"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n  const submitButton = screen.getByRole('button', { name: /submit/i });\n  const cancelButton = screen.getByRole('button', { name: /cancel/i });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"fj5lm"},{"content":"const MoreNames = () => {\n  return (\n    <div>\n      <label htmlFor='email'>Email</label>\n      <input id='email' />\n\n      <label htmlFor='search'>Search</label>\n      <input id='search' />\n    </div>\n  );\n};\nrender(<MoreNames />);","type":"code","id":"owleg"},{"content":"test('shows and email and search input', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', { name: /email/i });\n  const searchInput = screen.getByRole('textbox', { name: /search/i });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n});","type":"code","id":"mb3yz"},{"content":"const IconButtons = () => {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n      <button aria-label=\"sign out\">\n        <svg />\n      </button>\n    </div>\n  );\n};\n\nrender(<IconButtons />);","type":"code","id":"hzx1c"},{"content":"test('find elements based on label', () => {\n  render(<IconButtons />);\n  const signInButton = screen.getByRole('button', { name: /sign in/i });\n  const signOutButton = screen.getByRole('button', { name: /sign out/i });\n\n  expect(signInButton).toBeInTheDocument();\n  expect(signOutButton).toBeInTheDocument();\n});","type":"code","id":"tmgpx"}]